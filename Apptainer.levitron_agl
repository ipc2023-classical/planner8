# Stage 1: Compile the planner
Bootstrap: docker
From: ubuntu:22.04
Stage: build

%files
    . /planner

%post
    ## Install all necessary dependencies.
    apt-get update
    apt-get -y install --no-install-recommends cmake g++ make pypy3 build-essential g++ python3-dev autotools-dev libicu-dev libbz2-dev libboost-all-dev=1.74.0.3ubuntu7 libboost-program-options1.74-dev

    ## Clear build directory.
    rm -rf /planner/builds

    ## Build planner.
    cd /planner
    pypy3 build.py -j8
    strip --strip-all /planner/builds/release/bin/downward

    cd /planner/ext/powerlifted
    pypy3 build.py
    strip --strip-all /planner/ext/powerlifted/builds/release/search/search

    cd /planner/ext/cpddl
    make && make -C bin
    strip --strip-all /planner/ext/cpddl/bin/pddl \
                      /planner/ext/cpddl/bin/pddl-fdr \
                      /planner/ext/cpddl/bin/pddl-lplan \
                      /planner/ext/cpddl/bin/pddl-pddl \
                      /planner/ext/cpddl/bin/pddl-symba \

    cd /planner


# Stage 2: Run the planner
Bootstrap: docker
From: ubuntu:22.04
Stage: run

%files from build
    /planner/driver
    /planner/fast-downward.py
    /planner/builds/release/bin
    /planner/ext

%post
    apt-get update
    apt-get -y install --no-install-recommends pypy3 libboost-program-options1.74-dev
    rm -rf /var/lib/apt/lists/*

%environment
    export CPDDL_BIN=/planner/ext/cpddl/bin
    export POWERLIFTED_IPC=/planner/ext/powerlifted
    export PATH=$PATH:/planner/ext/clingo

# The runscript is called whenever the container is used to solve an instance.
%runscript
    DOMAINFILE="$1"
    PROBLEMFILE="$2"
    PLANFILE="$3"

    pypy3 /planner/fast-downward.py \
        --overall-memory-limit 7680M \
        --overall-time-limit 5m \
        --translate-time-limit 150 \
        --alias seq-agl-maidu \
        --plan-file "$PLANFILE" \
        "$DOMAINFILE" "$PROBLEMFILE" \
        --translate-options --invariant-generation-max-candidates 0 || \
        pypy3 /planner/ext/powerlifted/powerlifted.py \
        -d $DOMAINFILE -i $PROBLEMFILE --plan-file $PLANFILE \
        --iteration alt-bfws1,ff,yannakakis,1 \
        --iteration bfws1,blind,yannakakis,1 \
        --iteration lazy-po,add,yannakakis,2 \
        --iteration bfws1,blind,yannakakis,2 \
        --iteration lazy-po,ff,yannakakis,3 \
        --iteration alt-bfws1,ff,yannakakis,9 \
        --iteration bfws2,blind,yannakakis,9 \
        --iteration lazy-po,ff,yannakakis,9 \
        --iteration alt-bfws1,add,yannakakis,17 \
        --iteration bfws2,blind,yannakakis,35 \
        --iteration lazy-prune,ff,yannakakis,23 \
        --iteration lazy-po,add,yannakakis,5 \
        --iteration alt-bfws1,ff,yannakakis,40 \
        --iteration gbfs,add,yannakakis,3 \
        --iteration lazy-prune,add,yannakakis,30 \
        --iteration bfws1,blind,yannakakis,47 \
        --iteration lazy-po,rff,yannakakis,9 \
        --iteration gbfs,rff,yannakakis,6 \
        --iteration alt-bfws2,rff,yannakakis,7 \
        --iteration gbfs,add,yannakakis,7 \
        --iteration lazy-po,add,yannakakis,7 \
        --iteration gbfs,rff,yannakakis,9 \
        --iteration alt-bfws1,rff,yannakakis,10 \
        --unit-cost --preprocess-task --only-effects-novelty-check \
        --time-limit 300

# Define meta data
%labels
Name        Levitron Agile
Description Hybrid planner using both the grounded planner Scorpion Maidu and the lifted planner Powerlifted
Authors     Augusto B. Corrêa <augusto.blaascorrea@unibas.ch>, Guillem Francès <guillem.frances@gmail.com>, Markus Hecher <hecher@mit.edu>, Davide Mario Longo <davidem.longo@gmail.com>, Jendrik Seipp <jendrik.seipp@liu.se>
License     GPL 3
Tracks      agile
SupportsDerivedPredicates                       yes
SupportsUniversallyQuantifiedPreconditions      yes
SupportsExistentiallyQuantifiedPreconditions    yes
SupportsUniversallyQuantifiedEffects            yes
SupportsNegativePreconditions                   partially, not supported by some components
SupportsEqualityPreconditions                   yes
SupportsInequalityPreconditions                 yes
SupportsConditionalEffects                      yes
SupportsImplyPreconditions                      yes
